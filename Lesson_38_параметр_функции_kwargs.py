#  **kwargs - это параметр функции, который позволяет передавать переменное
# количество именованных аргументов. Эти аргументы представлены в виде словаря,
# где ключи - это имена аргументов, а значения - их соответствующие значения.

# Пример функции, использующей **kwargs для динамической работы с именованными аргументами:
def print_info(**kwargs):
    # Перебор всех переданных именованных аргументов и их вывод
    for key, value in kwargs.items():
        print(f"{key}: {value}")


# Вызов функции с использованием **kwargs
print_info(имя="John", возраст=25, город="New York")


# Вывод:
# имя: John
# возраст: 25
# город: New York

#  **kwargs может быть использован вместе с обычными аргументами и *args,
# но следует учитывать порядок параметров: сначала идут обычные аргументы,
# затем * args и в конце **kwargs.

# Пример функции с комбинированным использованием *args и **kwargs:
def combined_example(a, *args, **kwargs):
    print(f"Фиксированный аргумент: {a}")
    for arg in args:
        print(f"Переменный аргумент из  * args: {arg}")
    for key, value in kwargs.items():
        print(f"Переменный именованный аргумент из  *  * kwargs: {key} = {value}")


# Вызов функции combined_example с различными аргументами
combined_example(1, "два", 3, имя="John", возраст=25)

# Ошибки могут возникнуть, если передать именованный аргумент, который уже был зафиксирован,
# или если использовать неправильный порядок параметров.

#  **kwargs полезен в ситуациях, когда функция должна принять неопределенное число именованных аргументов,
# или когда аргументы передаются динамически.

# Он также используется для создания декораторов, функций высшего порядка и при работе с API,
# где могут появляться новые ключи аргументов со временем.
