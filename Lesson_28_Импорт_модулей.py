# Импорт модулей и специальной конструкции if __name__ == '__main__'

# Импорт модулей в Python позволяет использовать функциональность, предоставляемую другими модулями.
# Это может быть стандартная библиотека Python, сторонние библиотеки или ваши собственные модули.

# Команда dir() используется для получения списка атрибутов объекта или имен,
# доступных в текущем локальном пространстве имен:
x = 7
print(dir())  # Выводит список имен, определенных в текущем пространстве имен

# Команда help() предоставляет справку по модулю, ключевому слову, атрибуту или любому другому объекту:
print(help('modules'))  # Выводит список доступных модулей

# Модуль sys содержит функциональность, связанную с интерпретатором Python.
# sys.path - это список путей, по которым Python ищет модули при их импорте.


import sys

print(sys.path)  # Выводит текущий путь поиска модулей

# Специальная конструкция if __name__ == '__main__': используется для определения того,
# должен ли код выполняться при импорте модуля или при прямом выполнении как скрипта:
if __name__ == '__main__':
    # Этот блок кода будет выполнен только если файл запущен как основная программа.
    print('Модуль запущен напрямую, а не импортирован.')

# Пример использования:
# Если вы импортируете этот скрипт в другом модуле, код в блоке if __name__ == '__main__' не будет выполнен.
# Это полезно для тестирования модуля: можно написать тесты внутри этого блока и они будут запускаться
# только при прямом выполнении модуля, а не при его импорте.
