# Обработка исключений, try, except, finally

# Менеджер контекста with as - это конструкция, обеспечивающая корректное управление ресурсами,
# такими как файлы, сетевые соединения и пр., гарантируя их закрытие после использования.

# Синтаксис with as:
# with выражение as переменная:
#     блок кода

# Пример использования менеджера контекста для работы с файлами:
with open('example.txt', 'w') as file:
    file.write('Привет, мир!')
# Файл 'example.txt' будет автоматически закрыт после выхода из блока кода.

# Если в блоке кода произойдет исключение, менеджер контекста гарантирует закрытие файла:
try:
    with open('example.txt', 'w') as file:
        file.write('Привет, мир!')
        raise Exception('Произошла ошибка')
except Exception as e:
    print(e)
# Несмотря на исключение, файл 'example.txt' будет закрыт.

# Менеджер контекста также полезен при работе с другими ресурсами:
# with database_connection as conn:
#     # Работа с базой данных
# # После блока with соединение с базой данных будет закрыто.

# Пример: Запись в файл с использованием менеджера контекста
with open("file.txt", "a", encoding="utf-8") as file:
    file.write("something\n")  # Добавляем текст и перенос строки
    file.write("что-то")       # Добавляем ещё текст
print("Все норм")              # Информируем об успешной операции

# В отличие от использования open() и close(), менеджер контекста сокращает количество кода
# и делает его более читаемым, а также автоматически обрабатывает исключения и закрывает файлы.

# Важно помнить, что блок finally не является обязательным и используется для кода,
# который должен быть выполнен в любом случае, независимо от того, произошло исключение или нет.
