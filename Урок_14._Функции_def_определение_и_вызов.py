# Функции в Python используются для группировки кода, что облегчает его повторное использование и улучшает читаемость.

def greet():
    """
    Простая функция без аргументов, которая печатает приветствие.
    """
    print("Привет!")

def personalized_greeting(name):
    """
    Функция с аргументом, которая печатает персонализированное приветствие.
    
    :param name: имя человека, которому адресовано приветствие
    """
    print(f"Привет, {name}!")

def sum_two_numbers(num1, num2):
    """
    Функция, которая принимает два числа в качестве аргументов и возвращает их сумму.
    Возвращает число, которое может быть типа int или float.
    
    :param num1: первое число для сложения
    :param num2: второе число для сложения
    :return: сумма двух чисел
    """
    return num1 + num2



def multiply_by_two(value):
    """
    Функция, которая умножает значение на 2 и возвращает результат.
    Возвращает число, которое может быть типа int или float.
    
    :param value: значение для умножения
    :return: удвоенное значение
    """
    return value * 2

# Глобальные переменные могут быть изменены из любого места программы, что делает код менее предсказуемым.
global_base_value = 10

def function_with_global():
    """
    Функция, которая использует глобальную переменную для демонстрации области видимости.
    Использует глобальную переменную global_base_value в своей локальной области видимости.
    
    :return: сумма локального и глобального значения
    """
    local_sum = 5
    return local_sum + global_base_value

# Вызовы функций
greet() # Привет!
personalized_greeting("Алексей") # Привет, Алексей!
total = sum_two_numbers(3, 5)
print(total)  # Выводит: 8
multiplication_result = multiply_by_two(5)
print(multiplication_result)  # Выведет: 10
print(function_with_global())  # Выведет: 15
