# Функции и область видимости переменных в Python:
"""
Функции в программировании:
- Функции - это переиспользуемые блоки кода, предназначенные для выполнения конкретной задачи.
- Они помогают разделить программу на модули, упростить ее и избежать повторения кода.
- Функции могут принимать параметры и могут возвращать значения.

Область видимости переменных:
- Область видимости переменной определяет контекст, в котором переменная может быть использована.
- В Python есть два уровня области видимости: глобальный и локальный.

Глобальная область видимости:
- Глобальные переменные объявляются вне всех функций и доступны в любом месте программы.
"""
# Глобальная переменная доступна в любом месте в коде
x = 10


# Определение функции, которая печатает глобальную переменную
def print_global_x():
    # Доступ к глобальной переменной внутри функции
    print(x)


# Вызов функции, которая выводит значение глобальной переменной
print_global_x()  # Выводит: 10


# Определение функции, которая создает и печатает локальную переменную
def print_local_y():
    # Локальная переменная доступна только внутри функции
    y = 5
    print(y)


# Вызов функции, которая выводит значение локальной переменной
print_local_y()  # Выводит: 5


# Прямой доступ к локальной переменной за пределами функции вызовет ошибку
# print(y)  # NameError: name 'y' is not defined

# Использование ключевого слова global для изменения глобальной переменной внутри функции
def modify_global_z():
    global z
    # Изменяем значение глобальной переменной z
    z = 10
    z += 1
    print(z)


# Инициализация глобальной переменной z
z = 5
# Вызов функции, которая изменяет и печатает глобальную переменную
modify_global_z()  # Выводит: 11
# Печать глобальной переменной z, чтобы показать, что она изменилась
print(z)  # Выводит: 11


# Определение внешней функции, содержащей вложенную функцию
def outer_function():
    # Переменная в обрамляющей области видимости
    outer_var = 10

    # Определение внутренней функции, которая изменяет outer_var
    def inner_function():
        nonlocal outer_var
        # Изменяем значение outer_var с помощью nonlocal
        outer_var = 100
        print(outer_var)

    # Вызов внутренней функции
    inner_function()
    # Печать outer_var после вызова inner_function покажет, что значение изменилось
    print(outer_var)


# Вызов внешней функции, покажет измененное значение outer_var
outer_function()  # Выводит: 100, 100
